{"version":3,"sources":["components/Button.js","components/EditText.js","components/GeneralInfo.js","components/ShowDataSchool.js","components/EduExp.js","components/ShowDataPrac.js","components/PraExp.js","App.js","index.js"],"names":["Button","props","this","render","type","value","className","onClick","React","Component","EditText","comp","state","edit","onChange","updateValue","setEdit","button","e","setState","target","console","log","bind","GeneralInfo","buttons","ShowData","school","from","to","qualification","delData","index","EduExp","delEdu","prevState","prevData","data","map","splice","getEdu","updateSchool","updateFrom","updateTo","updateQual","addQuali","submitQuali","push","showEdu","subButton","length","ts","i","qual","handleRender","company","title","tasks","exp","PraExp","getPra","updateCompany","updateTitle","updateTasks","updateExp","showPra","App","view","btnVal","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbb2cb6a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Button extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.render === '1') { //why render props?\r\n            return <input type=\"button\" value={this.props.value} className={this.props.className} onClick={this.props.onClick}></input> \r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n}\r\n\r\n//what is the purpose of this Button component???\r\n\r\nexport default Button;","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nclass EditText extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        value: this.props.value, //why is this needed?\r\n        edit: 0,\r\n\r\n    }\r\n\r\n    this.setEdit = this.setEdit.bind(this);    //what does setEdit do?\r\n    }\r\n\r\n    comp = () => { //when you click edit button\r\n        if (this.state.edit === 1) {\r\n            return <div className=\"Text\">\r\n                <input type=\"text\" value={this.state.value} onChange={this.updateValue} ></input> \r\n                <input type=\"button\" value=\"Save\" onClick={this.setEdit} className=\"button\" ></input>\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"Text\">\r\n            <div>\r\n                <label>{this.state.value}</label>\r\n            </div>\r\n            <Button value=\"Edit\" render={this.props.button} className=\"button\" onClick={this.setEdit} />\r\n        </div>\r\n    }\r\n\r\n    updateValue = (e) => {\r\n        this.setState({ value: e.target.value }) //e.target.value means? why updateValue no need to bind like setEdit?\r\n    }\r\n\r\n\r\n    setEdit = () => {\r\n        console.log(\"setEdit\");\r\n        this.setState(()=> {\r\n            if (this.state.edit === 0) { //setEdit toggles between the two different state\r\n                return { edit: 1 }\r\n            }\r\n            return { edit: 0}\r\n        });\r\n    }\r\n    render() {\r\n        return this.comp(); //why need this when you call this function?\r\n    }\r\n}\r\n\r\nexport default EditText;","import React from \"react\";\r\nimport EditText from \"./EditText\"\r\n\r\nclass GeneralInfo extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"GeneralInfo\">\r\n                <EditText value=\"First Name\" buttons={this.props.buttons} />\r\n                <EditText value=\"Last Name\" buttons={this.props.buttons} />\r\n                <EditText value=\"Email\" buttons={this.props.buttons} />\r\n                <EditText value=\"Phone Number\" buttons={this.props.buttons} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GeneralInfo\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nclass ShowData extends React.Component {\r\n    render() {\r\n        console.log(this.props.button); //what is this for?\r\n        return <div className=\"schoolData\">\r\n            <div>\r\n                <div>\r\n                    <label className=\"wide\">Institution:</label><label>{this.props.school}</label>\r\n                </div>\r\n                <div>\r\n                    <label className=\"wide\">From:</label><label>{this.props.from}</label>\r\n                </div>\r\n                <div>\r\n                    <label className=\"wide\">To:</label><label>{this.props.to}</label>\r\n                </div>\r\n                <div>\r\n                    <label className=\"wide\">Qualification:</label><label>{this.props.qualification}</label>\r\n                </div>\r\n            </div>\r\n            <Button render={this.props.button} value=\"delete\" className=\"button delBtn\" onClick={() => { this.props.delData(this.props.index) }} />\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n//what is render={this.props.button}? maybe it creates the button? what is delData and index in the last line?\r\n\r\n\r\nexport default ShowData; //the DOM elements created by this component are shown after you SUBMIT","import React from \"react\";\r\nimport ShowData from \"./ShowDataSchool\";\r\nimport Button from \"./Button\";\r\n\r\nclass EduExp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.props.EduExp; //i think this.props.EduExp is from the parent component (App.js)\r\n        this.delEdu = this.delEdu.bind(this); //what is it binding?\r\n        this.setEdit = this.setEdit.bind(this);\r\n    }\r\n\r\n    delEdu = (index) => {  //0,1,2,3,4,...\r\n        this.setState((prevState) => {\r\n            let prevData = prevState.data.map(e => e); //prevState is a parameter, but what is data.map(e => e)?\r\n            prevData.splice(index, 1); //at index position, remove 1 element. this means?\r\n            return {\r\n                data: prevData //this is the content of the new array\r\n            }\r\n        })\r\n\r\n        this.props.getEdu(this.state); //what is getEdu?\r\n    }\r\n\r\n    updateSchool = (e) => {\r\n        this.setState({ school: e.target.value }); //e.target.value is whatever value user inputs\r\n    }\r\n    updateFrom = (e) => {\r\n        this.setState({ from: e.target.value });\r\n    }\r\n    updateTo = (e) => {\r\n        this.setState({ to: e.target.value });\r\n    }\r\n    updateQual = (e) => {\r\n        this.setState({ qualification: e.target.value });\r\n    }\r\n\r\n    addQuali = () => {\r\n        return <div className='addQuali'>\r\n            <div>\r\n                <label>School:</label><input type=\"text\" onChange={this.updateSchool} value={this.state.school}></input>\r\n            </div>\r\n            <div>\r\n                <label>From:</label><input type=\"text\" onChange={this.updateFrom} value={this.state.from}></input>\r\n            </div>\r\n            <div>\r\n                <label>To:</label><input type=\"text\" onChange={this.updateTo} value={this.state.to}></input>\r\n            </div>\r\n            <div>\r\n                <label>Qualification:</label><input type=\"text\" onChange={this.updateQual} value={this.state.qualification}></input>\r\n            </div>\r\n            <input type=\"button\" value=\"submit\" onClick={this.submitQuali} className={\"button\"}></input>\r\n        </div>\r\n    }\r\n\r\n    //i think value={this.state.---} is the state after the user inputs\r\n\r\n    submitQuali = () => {\r\n        let data = {\r\n            school: this.state.school, //state after submission, which is after the user inputs value\r\n            from: this.state.from,\r\n            to: this.state.to,\r\n            qualification: this.state.qualification\r\n        };\r\n\r\n        this.setState((prevState) => {\r\n            let prevData = prevState.data.map(e => e); //again?\r\n            prevData.push(data); //push data here means the data user inputs get added on top of the any previous submission, meaning there can be multiple submissions\r\n            return {\r\n                data: prevData,\r\n                edit: 0 //why is edit here? isn't the edit button only for the general info part?\r\n            };\r\n        });\r\n\r\n        this.props.getEdu(this.state);\r\n    }\r\n\r\n    showEdu = () => {\r\n        let subButton = <Button render={this.props.button} value=\"Add\" onClick={this.setEdit} className=\"button\" />; //this is add button? then what is render={this.props.button}?\r\n        if (this.state.data.length === 0) { //means no data?\r\n            return subButton;\r\n        } else {\r\n            console.log(this.state.data);\r\n            let data = [];\r\n            let ts = this.state;\r\n            for (let i =0; i<this.state.data.length; i++) { //what is key here?\r\n                data.push(<ShowData key={i} index={i} button={this.props.button} school={ts.data[i].school} from={ts.data[i].to} qual={ts.data[i].qualification} delData={this.delEdu} />)\r\n            } //what is all this for?\r\n            return <div className=\"showEdu\">\r\n                {data}\r\n                {subButton}\r\n            </div>\r\n        }\r\n    }\r\n\r\n    setEdit = () => {\r\n        this.setState({ edit: 1 })\r\n    }\r\n\r\n    handleRender = () => {\r\n        if (this.state.edit === 0) { //before add button is pressed\r\n            return this.showEdu();\r\n        }\r\n        if (this.state.edit === 1) { //after add button is pressed\r\n            return this.addQuali();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(\"edu exp:\", this.props.button); //?? what is this.props.button referring to ??\r\n        return (\r\n            <div className=\"EduExp\">\r\n                <h3 className=\"heading\">Educational Experience</h3>\r\n                {this.handleRender()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EduExp;","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nclass ShowData extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"pracData\">\r\n        <div>\r\n          <div>\r\n            <label className=\"wide\">Company Name:</label>\r\n            <label>{this.props.company}</label>\r\n          </div>\r\n          <div>\r\n            <label className=\"wide\">Title:</label>\r\n            <label>{this.props.title}</label>\r\n          </div>\r\n          <div>\r\n            <label className=\"wide\">Tasks:</label>\r\n            <label>{this.props.tasks}</label>\r\n          </div>\r\n          <div>\r\n            <label className=\"wide\">Year Exp:</label>\r\n            <label>{this.props.exp}</label>\r\n          </div>\r\n        </div>\r\n\r\n        <Button render={this.props.button} value=\"delete\" className=\"button delBtn\" onClick={() => { this.props.delData(this.props.index) }} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowData\r\n","import React from \"react\";\r\nimport ShowData from \"./ShowDataPrac\";\r\nimport Button from \"./Button\";\r\n\r\nclass PraExp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.props.PraExp;\r\n    this.delEdu = this.delEdu.bind(this);\r\n    this.setEdit = this.setEdit.bind(this);\r\n  }\r\n\r\n  delEdu = (index) => {\r\n    this.setState((prevState) => {\r\n      let prevData = prevState.data.map((e) => e);\r\n      prevData.splice(index, 1);\r\n      return {\r\n        data: prevData,\r\n      };\r\n    });\r\n\r\n    this.props.getPra();\r\n  };\r\n\r\n  updateCompany = (e) => {\r\n    this.setState({ company: e.target.value });\r\n  };\r\n  updateTitle = (e) => {\r\n    this.setState({ title: e.target.value });\r\n  };\r\n  updateTasks = (e) => {\r\n    this.setState({ tasks: e.target.value });\r\n  };\r\n  updateExp = (e) => {\r\n    this.setState({ exp: e.target.value });\r\n  };\r\n\r\n  addQuali = () => {\r\n    return (\r\n      <div className=\"addQuali\">\r\n        <div>\r\n          <label>Company Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.updateCompany}\r\n            value={this.state.company}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label>Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.updateTitle}\r\n            value={this.state.title}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label>Tasks:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.updateTasks}\r\n            value={this.state.tasks}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label>Year Exp:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.updateExp}\r\n            value={this.state.exp}\r\n          ></input>\r\n        </div>\r\n\r\n        <input\r\n          className=\"button\"\r\n          type=\"button\"\r\n          value=\"submit\"\r\n          onClick={this.submitQuali}\r\n        ></input>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  submitQuali = () => {\r\n    let data = {\r\n      company: this.state.company,\r\n      title: this.state.title,\r\n      tasks: this.state.tasks,\r\n      exp: this.state.exp,\r\n    };\r\n\r\n    this.setState((prevState) => {\r\n      let prevData = prevState.data.map((e) => e);\r\n      prevData.push(data);\r\n      return {\r\n        data: prevData,\r\n        edit: 0,\r\n      };\r\n    });\r\n\r\n    this.props.getPra();\r\n  };\r\n\r\n  showPra = () => {\r\n    let subButton = (\r\n      <Button\r\n        render={this.props.button}\r\n        value=\"Add\"\r\n        onClick={this.setEdit}\r\n        className=\"button\"\r\n      />\r\n    );\r\n    if (this.state.data.length === 0) {\r\n      return subButton;\r\n    } else {\r\n      console.log(this.state.data);\r\n      let data = [];\r\n      let ts = this.state;\r\n      for (let i = 0; i < this.state.data.length; i++) {\r\n        data.push(\r\n          <ShowData\r\n            key={i}\r\n            index={i}\r\n            button={this.props.button}\r\n            school={ts.data[i].company}\r\n            from={ts.data[i].title}\r\n            to={ts.data[i].tasks}\r\n            qual={ts.data[i].exp}\r\n            delData={this.delEdu}\r\n          />\r\n        );\r\n      }\r\n      return (\r\n        <div className=\"showPra\">\r\n          {data}\r\n          {subButton}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  setEdit = () => {\r\n    this.setState({ edit: 1 });\r\n  };\r\n\r\n  handleRender = () => {\r\n    if (this.state.edit === 0) {\r\n      return this.showPra();\r\n    }\r\n    if (this.state.edit === 1) {\r\n      return this.addQuali();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PraExp\">\r\n        <h3 className=\"heading\">Practical Experience</h3>\r\n        {this.handleRender()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PraExp;","import React, { Component } from \"react\";\r\nimport GeneralInfo from \"./components/GeneralInfo\"\r\nimport EduExp from \"./components/EduExp\"\r\nimport PraExp from \"./components/PraExp\"\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    //this is the state of the system initially\r\n    this.state = {\r\n      EduExp: {\r\n        school: \"\",\r\n        from: 0,\r\n        to: 0,\r\n        qualification: \"\",\r\n        edit: 0, //edit button not pressed yet\r\n        data: [], //?\r\n      },\r\n      PraExp: {\r\n        company: \"\",\r\n        title: \"\",\r\n        tasks: \"\",\r\n        exp: \"\",\r\n        edit: 0,\r\n        data: [],\r\n      },\r\n      buttons: \"1\", //means have buttons when it is set to updateCV state\r\n      btnVal: \"preview\",\r\n    };\r\n\r\n    this.getEdu = this.getEdu.bind(this);\r\n    this.getPra = this.getPra.bind(this);\r\n  }\r\n\r\n  getEdu = (e) => {\r\n    this.setState({ EduExp: e }); //does it mean e (click) changes the state? what is e in this context?\r\n  };\r\n\r\n  getPra = (e) => {\r\n    this.setState({ PraExp: e });\r\n  };\r\n\r\n  view = () => {\r\n    if (this.state.buttons === \"0\") {\r\n      this.setState({\r\n        buttons: \"1\",\r\n        btnVal: \"preview\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        buttons: \"0\",\r\n        btnVal: \"update CV\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>CV generator</h1>\r\n        <input\r\n          className=\"button\"\r\n          type=\"button\"\r\n          value={this.state.btnVal} //\"Preview\"\r\n          onClick={this.view} //Toggle view\r\n        ></input>\r\n        <GeneralInfo buttons={this.state.buttons} />\r\n        <div className=\"line\"></div>\r\n        <EduExp\r\n          getEdu={this.getEdu}\r\n          EduExp={this.state.EduExp}\r\n          button={this.state.buttons}\r\n        />\r\n        <div className=\"line\"></div>\r\n        <PraExp\r\n          getPra={this.getPra}\r\n          PraExp={this.state.PraExp}\r\n          button={this.state.buttons}\r\n        />\r\n        {/* why buttons in generalInfo but button in eduExp and praExp?? */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode >\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}